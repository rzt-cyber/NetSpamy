import time
import threading
from telebot import types
import logging
from database import Database

logger = logging.getLogger(__name__)

class VotingSystem:
    def __init__(self, bot, db: Database):
        self.bot = bot
        self.db = db

    def start_vote(self, chat_id, target_user, initiator_id, vote_type):
        """–ó–∞–ø—É—Å–∫ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
        if vote_type == "ban":
            existing = self.db.get_active_voteban(chat_id, target_user.id)
        else:
            existing = self.db.get_active_votemute(chat_id, target_user.id)
        
        if existing:
            self.bot.send_message(chat_id, "üö® –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –∏–¥–µ—Ç!")
            return
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
        members_count = self.bot.get_chat_members_count(chat_id)
        if vote_type == "ban":
            votes_needed = max(3, members_count // 2)
        else:
            votes_needed = max(3, members_count // 10)

        end_time = int(time.time()) + 60

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
        if vote_type == "ban":
            self.db.start_voteban(chat_id, target_user.id, initiator_id, votes_needed, end_time)
        else:
            self.db.start_votemute(chat_id, target_user.id, initiator_id, votes_needed, end_time)

        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        markup = types.InlineKeyboardMarkup()
        callback_data = f"vote_{vote_type}_{target_user.id}"
        markup.add(types.InlineKeyboardButton("‚úÖ –ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å", callback_data=callback_data))

        msg = self.bot.send_message(
            chat_id,
            f"üö® –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ {'–±–∞–Ω' if vote_type == 'ban' else '–º—É—Ç'} @{target_user.username}!\n"
            f"‚úÖ –ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–æ: 0/{votes_needed}\n"
            f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: 60 —Å–µ–∫.",
            reply_markup=markup
        )

        # –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–æ–≤
        saved_reply_markup = msg.reply_markup
        self._start_timer(
        chat_id, 
        msg.message_id, 
        end_time, 
        vote_type, 
        target_user.id, 
        saved_reply_markup  
        )

    def _start_timer(self, chat_id, message_id, end_time, vote_type, target_id, reply_markup):
        """–ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞"""
        self._update_timer(chat_id, message_id, end_time, vote_type, target_id, reply_markup)
        threading.Timer(60.0, self._check_vote_result, args=[chat_id, target_id, message_id, vote_type]).start()

    def _update_timer(self, chat_id, message_id, end_time, vote_type, target_id, reply_markup):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏"""
        remaining = end_time - int(time.time())
        if remaining <= 0:
            return

        try:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
            if vote_type == "ban":
                vote_data = self.db.get_active_voteban(chat_id, target_id)
            else:
                vote_data = self.db.get_active_votemute(chat_id, target_id)

            if vote_data:
                self.bot.edit_message_text(
                    f"üö® –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ {'–±–∞–Ω' if vote_type == 'ban' else '–º—É—Ç'}!\n"
                    f"‚úÖ –ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–æ: {vote_data['votes_current']}/{vote_data['votes_needed']}\n"
                    f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {remaining} —Å–µ–∫.",
                    chat_id,
                    message_id,
                    reply_markup=reply_markup
                )
                # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
                threading.Timer(5.0, self._update_timer, 
                           args=[chat_id, message_id, end_time, vote_type, target_id, reply_markup]).start()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞: {e}")

    def _check_vote_result(self, chat_id, target_id, message_id, vote_type):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
            if vote_type == "ban":
                vote_data = self.db.get_active_voteban(chat_id, target_id)
                self.db.close_voteban(chat_id, target_id)
            else:
                vote_data = self.db.get_active_votemute(chat_id, target_id)
                self.db.close_votemute(chat_id, target_id)

            if vote_data:
                if vote_type == "ban":
                    self.db.close_voteban(chat_id, target_id)
                else:
                    self.db.close_votemute(chat_id, target_id)
            
            if not vote_data:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–∞–Ω–Ω—ã—Ö
                self.bot.edit_message_text("‚ùå –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", chat_id, message_id)
                return

            if vote_data['votes_current'] >= vote_data['votes_needed']:
                # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è
                if vote_type == "ban":
                    self.bot.ban_chat_member(chat_id, target_id)
                    text = "‚õî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω!"
                else:
                    until_date = int(time.time()) + 86400  # –ú—É—Ç –Ω–∞ 24 —á–∞—Å–∞
                    self.bot.restrict_chat_member(
                        chat_id, target_id, 
                        until_date=until_date, 
                        can_send_messages=False
                    )
                    text = "üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—å—é—á–µ–Ω!"
            else:
                text = "‚ùå –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–ª–∏–ª–æ—Å—å."

            self.bot.edit_message_text(text, chat_id, message_id)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {e}", exc_info=True)

    def handle_vote(self, call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–∞"""
        try:
            _, vote_type, target_id = call.data.split('_')
            target_id = int(target_id)
            chat_id = call.message.chat.id
            user_id = call.from_user.id

            if vote_type == "ban":
                success = self.db.add_vote(chat_id, target_id, user_id)
                vote_data = self.db.get_active_voteban(chat_id, target_id)
            else:
                success = self.db.add_vote_mute(chat_id, target_id, user_id)
                vote_data = self.db.get_active_votemute(chat_id, target_id)

            if success and vote_data:
                remaining = vote_data['end_time'] - int(time.time())
                self.bot.edit_message_text(
                    f"üö® –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ {'–±–∞–Ω' if vote_type == 'ban' else '–º—É—Ç'}!\n"
                    f"‚úÖ –ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–æ: {vote_data['votes_current']}/{vote_data['votes_needed']}\n"
                    f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {remaining} —Å–µ–∫.",
                    chat_id,
                    call.message.message_id,
                    reply_markup=call.message.reply_markup
                )
            else:
                self.bot.answer_callback_query(call.id, "‚ùå –í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏!")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–∞: {e}")
            self.bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞!")